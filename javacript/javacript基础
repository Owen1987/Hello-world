参考MDN：https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects
参考JavaScript参考手册 http://www.runoob.com/jsref/dom-obj-document.html
     JavaScript对象：Array   Boolean   Number String   Date  Math  RegExp  Error +null object undefind
     Browser对象：Window  Navigator  Screen History Location
     Dom对象：Dument domElement  domAttr  domEvent domConsole
     HTML对象：即html标签元素对象
----JavaScript内置对象：
   ----Array   Boolean   Number String   Date  Math  RegExp  Error 
   ----全局属性/函数：JavaScript 全局属性和方法可用于创建Javascript对象
   ----JavaScript运算符：运算符用于赋值，比较值，执行算术运算等   
      明细： 
       全局属性： Infinity（正无穷）   NaN   undefined
       全局函数：
                  函数	                  描述
              decodeURI()	             解码某个编码的 URI。
              decodeURIComponent()	    解码一个编码的 URI 组件。
              encodeURI()	              把字符串编码为 URI。
              encodeURIComponent()	    把字符串编码为 URI 组件。
              escape()	                对字符串进行编码。
              eval()	                  计算 JavaScript 字符串，并把它作为脚本代码来执行。
              isFinite()	              检查某个值是否为有穷大的数。
              isNaN()	                  检查某个值是否是数字。
              Number()	                把对象的值转换为数字。
              parseFloat()	            解析一个字符串并返回一个浮点数。
              parseInt()	              解析一个字符串并返回一个整数。
              String()	                把对象的值转换为字符串。
              unescape()	              对由 escape() 编码的字符串进行解码。
       JavaScript运算符：
              算术运算符  + - * / %  ++  --
              赋值运算符  =  +=  -=  *=   /=  %=
              字符串运算符 +  +=
              比较运算符  ==  ===  !=  !==  > <  >=  <=
              条件运算符  &&  ||  !
              位运算符   &  |   ~   ^   <<   >>
       Error 对象
              Error 对象在错误发生时提供了错误的提示信息。
              Error属性：name message
                  try {
                      adddlert("Welcome");
                  }
                  catch(err) {
                      document.getElementById("demo").innerHTML = 
                      err.name + "<br>" + err.message;
                  }
--------Browser对象
     ---Window  对象表示浏览器中打开的窗口。如果文档包含框架（<frame> 或 <iframe> 标签），浏览器会为 HTML 文档创建一个 window 对象，并为每个框架创建一个额外的 window 对象。 
     ---Navigator  对象包含有关浏览器的信息。 
     ---Screen  对象包含有关客户端显示屏幕的信息。
     ---History  对象包含用户（在浏览器窗口中）访问过的 URL，是 window 对象的一部分，可通过 window.history 属性对其进行访问
     ---Location  有关当前 URL 的信息。是 window 对象的一部分，可通过 window.Location 属性对其进行访问。
     ---存储对象  Web 存储 API 提供了 sessionStorage （会话存储） 和 localStorage（本地存储）两个存储对象来对网页的数据进行添加、删除、修改、查询操作。
         localStorage 用于长久保存整个网站的数据，保存的数据没有过期时间，直到手动去除
         sessionStorage 用于临时保存同一窗口(或标签页)的数据，在关闭窗口或标签页之后将会删除这些数据。。
     明细：
     Window 对象属性
                        属性	                 描述
                        closed	返回窗口是否已被关闭。
                        defaultStatus	设置或返回窗口状态栏中的默认文本。
                        document	对 Document 对象的只读引用。(请参阅对象)
                        frames	返回窗口中所有命名的框架。该集合是 Window 对象的数组，每个 Window 对象在窗口中含有一个框架。
                        history	对 History 对象的只读引用。请参数 History 对象。
                        innerHeight	返回窗口的文档显示区的高度。
                        innerWidth	返回窗口的文档显示区的宽度。
                        localStorage	在浏览器中存储 key/value 对。没有过期时间。
                        length	设置或返回窗口中的框架数量。
                        location	用于窗口或框架的 Location 对象。请参阅 Location 对象。
                        name	设置或返回窗口的名称。
                        navigator	对 Navigator 对象的只读引用。请参数 Navigator 对象。
                        opener	返回对创建此窗口的窗口的引用。
                        outerHeight	返回窗口的外部高度，包含工具条与滚动条。
                        outerWidth	返回窗口的外部宽度，包含工具条与滚动条。
                        pageXOffset	设置或返回当前页面相对于窗口显示区左上角的 X 位置。
                        pageYOffset	设置或返回当前页面相对于窗口显示区左上角的 Y 位置。
                        parent	返回父窗口。
                        screen	对 Screen 对象的只读引用。请参数 Screen 对象。
                        screenLeft	返回相对于屏幕窗口的x坐标
                        screenTop	返回相对于屏幕窗口的y坐标
                        screenX	返回相对于屏幕窗口的x坐标
                        sessionStorage	在浏览器中存储 key/value 对。 在关闭窗口或标签页之后将会删除这些数据。
                        screenY	返回相对于屏幕窗口的y坐标
                        self	返回对当前窗口的引用。等价于 Window 属性。
                        status	设置窗口状态栏的文本。
                        top	返回最顶层的父窗口。
                        Window 对象方法
             window对象方法
                        方法	描述
                        alert()	显示带有一段消息和一个确认按钮的警告框。
                        atob()	解码一个 base-64 编码的字符串。
                        btoa()	创建一个 base-64 编码的字符串。
                        blur()	把键盘焦点从顶层窗口移开。
                        clearInterval()	取消由 setInterval() 设置的 timeout。
                        clearTimeout()	取消由 setTimeout() 方法设置的 timeout。
                        close()	关闭浏览器窗口。
                        confirm()	显示带有一段消息以及确认按钮和取消按钮的对话框。
                        createPopup()	创建一个 pop-up 窗口。
                        focus()	把键盘焦点给予一个窗口。
                        getSelection()	返回一个 Selection 对象，表示用户选择的文本范围或光标的当前位置。
                        getComputedStyle()	获取指定元素的 CSS 样式。
                        matchMedia()	该方法用来检查 media query 语句，它返回一个 MediaQueryList对象。
                        moveBy()	可相对窗口的当前坐标把它移动指定的像素。
                        moveTo()	把窗口的左上角移动到一个指定的坐标。
                        open()	打开一个新的浏览器窗口或查找一个已命名的窗口。
                        print()	打印当前窗口的内容。
                        prompt()	显示可提示用户输入的对话框。
                        resizeBy()	按照指定的像素调整窗口的大小。
                        resizeTo()	把窗口的大小调整到指定的宽度和高度。
                        scroll()	已废弃。 该方法已经使用了 scrollTo() 方法来替代。
                        scrollBy()	按照指定的像素值来滚动内容。
                        scrollTo()	把内容滚动到指定的坐标。
                        setInterval()	按照指定的周期（以毫秒计）来调用函数或计算表达式。
                        setTimeout()	在指定的毫秒数后调用函数或计算表达式。
                        stop()	停止页面载入。
              Navigator 对象属性
                        属性	        说明
                        appCodeName	返回浏览器的代码名
                        appName	返回浏览器的名称
                        appVersion	返回浏览器的平台和版本信息
                        cookieEnabled	返回指明浏览器中是否启用 cookie 的布尔值
                        platform	返回运行浏览器的操作系统平台
                        userAgent	返回由客户机发送服务器的user-agent 头部的值
                        Navigator 对象方法
               Navigator 对象方法       
                       方法	描述
                        javaEnabled()	指定是否在浏览器中启用Java
                        taintEnabled()	规定浏览器是否启用数据污点(data tainting)
               Screen 对象属性
                        属性	        说明
                        availHeight	返回屏幕的高度（不包括Windows任务栏）
                        availWidth	返回屏幕的宽度（不包括Windows任务栏）
                        colorDepth	返回目标设备或缓冲器上的调色板的比特深度
                        height	返回屏幕的总高度
                        pixelDepth	返回屏幕的颜色分辨率（每象素的位数）
                        width	返回屏幕的总宽度  
                History 对象属性
                        属性	    说明
                        length	返回历史列表中的网址数
                        History 对象方法
                History 对象方法
                        方法	说明
                        back()	加载 history 列表中的前一个 URL
                        forward()	加载 history 列表中的下一个 URL
                        go()	加载 history 列表中的某个具体页面  
               Location 对象属性
                        属性	描述
                        hash	返回一个URL的锚部分
                        host	返回一个URL的主机名和端口
                        hostname	返回URL的主机名
                        href	返回完整的URL
                        pathname	返回的URL路径名。
                        port	返回一个URL服务器使用的端口号
                        protocol	返回一个URL协议
                        search	返回一个URL的查询部分
                        Location 对象方法
                Location 对象方法    
                        方法	说明
                        assign()	载入一个新的文档
                        reload()	重新载入当前文档
                        replace()	用新的文档替换当前文档
                存储对象属性
                        属性	描述
                        length	返回存储对象中包含多少条数据。
                存储对象方法
                        方法	描述
                        key(n)	返回存储对象中第 n 个键的名称
                        getItem(keyname)	返回指定键的值
                        setItem(keyname, value)	添加键和值，如果对应的值存在，则更新该键对应的值。
                        removeItem(keyname)	移除键
                        clear()	清除存储对象中所有的键        
                 Web 存储 API
                      属性	描述
                      window.localStorage	在浏览器中存储 key/value 对。没有过期时间。
                      window.sessionStorage	在浏览器中存储 key/value 对。 在关闭窗口或标签页之后将会删除这些数据。  
                         // 存储
                          localStorage.setItem("lastname", "Smith");
                          // 检索
                          document.getElementById("result").innerHTML = localStorage.getItem("lastname");
---------DOM对象
     ---Document
                当浏览器载入 HTML 文档, 它就会成为 document 对象。
                document 对象是HTML文档的根节点与所有其他节点（元素节点，文本节点，属性节点, 注释节点）。
                Document 对象使我们可以从脚本中对 HTML 页面中的所有元素进行访问。
                提示：Document 对象是 Window 对象的一部分，可通过 window.document 属性对其进行访问。
     ---DOM元素对象
     ---DOM属性对象
     ---DOM事件对象
     ---DOM Console对象
     明细：
        HTML DOM 节点：
                        在 HTML DOM (Document Object Model) 中 , 每一个元素都是 节点:
                        文档是一个文档。
                        所有的HTML元素都是元素节点。
                        所有 HTML 属性都是属性节点。
                        文本插入到 HTML 元素是文本节点。are text nodes。
                        注释是注释节点。
Console 对象
Console 对象提供了访问浏览器调试模式的信息到控制台。

方法	描述
assert()	如果断言为 false，则在信息到控制台输出错误信息。
clear()	清除控制台上的信息。
count()	记录 count() 调用次数，一般用于计数。
error()	输出错误信息到控制台
group()	在控制台创建一个信息分组。 一个完整的信息分组以 console.group() 开始，console.groupEnd() 结束
groupCollapsed()	在控制台创建一个信息分组。 类似 console.group() ，但它默认是折叠的。
groupEnd()	设置当前信息分组结束
info()	控制台输出一条信息
log()	控制台输出一条信息
table()	以表格形式显示数据
time()	计时器，开始计时间，与 timeEnd() 联合使用，用于算出一个操作所花费的准确时间。
timeEnd()	计时结束
trace()	显示当前执行的代码在堆栈中的调用路径。
warn()	输出警告信息，信息最前面加一个黄色三角，表示警告

HTML DOM 事件
HTML DOM 事件
HTML DOM 事件允许Javascript在HTML文档元素中注册不同事件处理程序。

事件通常与函数结合使用，函数不会在事件发生前被执行！ (如用户点击按钮)。

提示： 在 W3C 2 级 DOM 事件中规范了事件模型。

HTML DOM 事件
DOM： 指明使用的 DOM 属性级别。

鼠标事件
属性	描述	DOM
onclick	当用户点击某个对象时调用的事件句柄。	2
oncontextmenu	在用户点击鼠标右键打开上下文菜单时触发	 
ondblclick	当用户双击某个对象时调用的事件句柄。	2
onmousedown	鼠标按钮被按下。	2
onmouseenter	当鼠标指针移动到元素上时触发。	2
onmouseleave	当鼠标指针移出元素时触发	2
onmousemove	鼠标被移动。	2
onmouseover	鼠标移到某元素之上。	2
onmouseout	鼠标从某元素移开。	2
onmouseup	鼠标按键被松开。	2
键盘事件
属性	描述	DOM
onkeydown	某个键盘按键被按下。	2
onkeypress	某个键盘按键被按下并松开。	2
onkeyup	某个键盘按键被松开。	2
框架/对象（Frame/Object）事件
属性	描述	DOM
onabort	图像的加载被中断。 ( <object>)	2
onbeforeunload	该事件在即将离开页面（刷新或关闭）时触发	2
onerror	在加载文档或图像时发生错误。 ( <object>, <body>和 <frameset>)	 
onhashchange	该事件在当前 URL 的锚部分发生修改时触发。	 
onload	一张页面或一幅图像完成加载。	2
onpageshow	该事件在用户访问页面时触发	
onpagehide	该事件在用户离开当前网页跳转到另外一个页面时触发	
onresize	窗口或框架被重新调整大小。	2
onscroll	当文档被滚动时发生的事件。	2
onunload	用户退出页面。 ( <body> 和 <frameset>)	2
表单事件
属性	描述	DOM
onblur	元素失去焦点时触发	2
onchange	该事件在表单元素的内容改变时触发( <input>, <keygen>, <select>, 和 <textarea>)	2
onfocus	元素获取焦点时触发	2
onfocusin	元素即将获取焦点时触发	2
onfocusout	元素即将失去焦点时触发	2
oninput	元素获取用户输入时触发	3
onreset	表单重置时触发	2
onsearch	用户向搜索域输入文本时触发 ( <input="search">)	 
onselect	用户选取文本时触发 ( <input> 和 <textarea>)	2
onsubmit	表单提交时触发	2
剪贴板事件
属性	描述	DOM
oncopy	该事件在用户拷贝元素内容时触发	 
oncut	该事件在用户剪切元素内容时触发	 
onpaste	该事件在用户粘贴元素内容时触发	 
打印事件
属性	描述	DOM
onafterprint	该事件在页面已经开始打印，或者打印窗口已经关闭时触发	 
onbeforeprint	该事件在页面即将开始打印时触发	 
拖动事件
事件	描述	DOM
ondrag	该事件在元素正在拖动时触发	 
ondragend	该事件在用户完成元素的拖动时触发	 
ondragenter	该事件在拖动的元素进入放置目标时触发	 
ondragleave	该事件在拖动元素离开放置目标时触发	 
ondragover	该事件在拖动元素在放置目标上时触发	 
ondragstart	该事件在用户开始拖动元素时触发	 
ondrop	该事件在拖动元素放置在目标区域时触发	 
多媒体（Media）事件
事件	描述	DOM
onabort	事件在视频/音频（audio/video）终止加载时触发。	 
oncanplay	事件在用户可以开始播放视频/音频（audio/video）时触发。	 
oncanplaythrough	事件在视频/音频（audio/video）可以正常播放且无需停顿和缓冲时触发。	 
ondurationchange	事件在视频/音频（audio/video）的时长发生变化时触发。	 
onemptied	当期播放列表为空时触发	 
onended	事件在视频/音频（audio/video）播放结束时触发。	 
onerror	事件在视频/音频（audio/video）数据加载期间发生错误时触发。	 
onloadeddata	事件在浏览器加载视频/音频（audio/video）当前帧时触发触发。	 
onloadedmetadata	事件在指定视频/音频（audio/video）的元数据加载后触发。	 
onloadstart	事件在浏览器开始寻找指定视频/音频（audio/video）触发。	 
onpause	事件在视频/音频（audio/video）暂停时触发。	 
onplay	事件在视频/音频（audio/video）开始播放时触发。	 
onplaying	事件在视频/音频（audio/video）暂停或者在缓冲后准备重新开始播放时触发。	 
onprogress	事件在浏览器下载指定的视频/音频（audio/video）时触发。	 
onratechange	事件在视频/音频（audio/video）的播放速度发送改变时触发。	 
onseeked	事件在用户重新定位视频/音频（audio/video）的播放位置后触发。	 
onseeking	事件在用户开始重新定位视频/音频（audio/video）时触发。	 
onstalled	事件在浏览器获取媒体数据，但媒体数据不可用时触发。	 
onsuspend	事件在浏览器读取媒体数据中止时触发。	 
ontimeupdate	事件在当前的播放位置发送改变时触发。	 
onvolumechange	事件在音量发生改变时触发。	 
onwaiting	事件在视频由于要播放下一帧而需要缓冲时触发。	 
动画事件
事件	描述	DOM
animationend	该事件在 CSS 动画结束播放时触发	 
animationiteration	该事件在 CSS 动画重复播放时触发	 
animationstart	该事件在 CSS 动画开始播放时触发	 
过渡事件
事件	描述	DOM
transitionend	该事件在 CSS 完成过渡后触发。	 
其他事件
事件	描述	DOM
onmessage	该事件通过或者从对象(WebSocket, Web Worker, Event Source 或者子 frame 或父窗口)接收到消息时触发	 
onmousewheel	已废弃。 使用 onwheel 事件替代	 
ononline	该事件在浏览器开始在线工作时触发。	 
onoffline	该事件在浏览器开始离线工作时触发。	 
onpopstate	该事件在窗口的浏览历史（history 对象）发生改变时触发。	 
onshow	该事件当 <menu> 元素在上下文菜单显示时触发	 
onstorage	该事件在 Web Storage(HTML 5 Web 存储)更新时触发	 
ontoggle	该事件在用户打开或关闭 <details> 元素时触发	 
onwheel	该事件在鼠标滚轮在元素上下滚动时触发	 
事件对象
常量
静态变量	描述	DOM
CAPTURING-PHASE	当前事件阶段为捕获阶段(1)	1
AT-TARGET	当前事件是目标阶段,在评估目标事件(1)	2
BUBBLING-PHASE	当前的事件为冒泡阶段 (3)	3
属性
属性	描述	DOM
bubbles	返回布尔值，指示事件是否是起泡事件类型。	2
cancelable	返回布尔值，指示事件是否可拥可取消的默认动作。	2
currentTarget	返回其事件监听器触发该事件的元素。	2
eventPhase	返回事件传播的当前阶段。	2
target	返回触发此事件的元素（事件的目标节点）。	2
timeStamp	返回事件生成的日期和时间。	2
type	返回当前 Event 对象表示的事件的名称。	2
方法
方法	描述	DOM
initEvent()	初始化新创建的 Event 对象的属性。	2
preventDefault()	通知浏览器不要执行与事件关联的默认动作。	2
stopPropagation()	不再派发事件。	2
目标事件对象
方法
方法	描述	DOM
addEventListener()	允许在目标事件中注册监听事件(IE8 = attachEvent())	2
dispatchEvent()	允许发送事件到监听器上 (IE8 = fireEvent())	2
removeEventListener()	运行一次注册在事件目标上的监听事件(IE8 = detachEvent())	2
事件监听对象
方法
方法	描述	DOM
handleEvent()	把任意对象注册为事件处理程序	2
文档事件对象
方法
方法	描述	DOM
createEvent()	 	2
鼠标/键盘事件对象
属性
属性	描述	DOM
altKey	返回当事件被触发时，"ALT" 是否被按下。	2
button	返回当事件被触发时，哪个鼠标按钮被点击。	2
clientX	返回当事件被触发时，鼠标指针的水平坐标。	2
clientY	返回当事件被触发时，鼠标指针的垂直坐标。	2
ctrlKey	返回当事件被触发时，"CTRL" 键是否被按下。	2
Location	返回按键在设备上的位置	3
charCode	返回onkeypress事件触发键值的字母代码。	2
key	在按下按键时返回按键的标识符。	3
keyCode	返回onkeypress事件触发的键的值的字符代码，或者 onkeydown 或 onkeyup 事件的键的代码。	2
which	返回onkeypress事件触发的键的值的字符代码，或者 onkeydown 或 onkeyup 事件的键的代码。	2
metaKey	返回当事件被触发时，"meta" 键是否被按下。	2
relatedTarget	返回与事件的目标节点相关的节点。	2
screenX	返回当某个事件被触发时，鼠标指针的水平坐标。	2
screenY	返回当某个事件被触发时，鼠标指针的垂直坐标。	2
shiftKey	返回当事件被触发时，"SHIFT" 键是否被按下。	2
方法
方法	描述	W3C
initMouseEvent()	初始化鼠标事件对象的值	2
initKeyboardEvent()	初始化键盘事件对象的值	3

                        
----------HTML 对象（所有的标签）     

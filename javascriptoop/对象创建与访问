对象的种类：
1.js内置对象 undefined null number string  boolean  object
2.宿主环境 window  document
3.自己创建的
对象的操作：
       成员的遍历   检查对象是否有某法属性  成员的删除（有些属性是不能删除的）

----自己创建：1.对象字面量 2.Object函数创建
   1.1 对象字面量：属性 方法    get set型属性
     var p={
                  name:"cj",
                  work:function(){
                      console.log("working....");
                  }
               },
               age:18,//这种会被直接赋值(改用下面方式)
               _age:18,
               get  age(){
               return  this._age;
               },
               set age(val){
                 if(val<0||val>150){
                   throw new Error("invalid  value");
                 }else{
                   this._age=val;
                 }
               // this._age=val;
               },
               address:{
                 home:"jiating";
                 office:"office"
               }
           }
           
 ----1.2 对象的访问方式：1通过 .   2通过[]      3.级联访问   
    var result=p&&p.address&&p.address.home----注意：JavaScript的特殊写法，c#和java没有这种写法
        p.xx="adsf"//添加属性
  2.1通过Object创建对象  
     var  o=new Object();
     o.toString();
     o.name="xxx";//添加属性
     o.["abc"]="abc";//添加属性
     其他定义与添加属性：Object.defineProperty    Object.defineProperties --get set writable enuerable configurable value   
     Object.defineProperty(p,"yy",{value:100,writable:false}) //不写writable默认false
      Object.defineProperties(p,{
          salary:{
             value:1000,
             writable:false
          },
          gender:{
             value:true
          }
          height:{
             get:function(){
               return  180
             },
             set:function(val){
               console.log(val);
             }
          }
      })


对象的操作：
    反射循环遍历：
      for(sx in p){
      console.log(sx);//遍历出的属性，无序
      console.log(p[sx]);//遍历出的属性值 enuerable:false为不能遍历的
      }
      第二种： Obeject.keys()
      Obeject.keys(p);//遍历属性，直接保存在数组里面，有序
  
  
 检查对象是有那个属性：
   "name" in p;//true
   p.hasOwnProperty("name");
 删除成员： configuarable:false  writable:false 不能删除
   delete p.name;
 成员的特性： enuerable  configuarable  writable
 得到对象的属性特性的描述：Object.getOwnPropertyDescriptor(p,"address")
      
构造器与类型检测：constructor
var o={};
var o1=new Object();
o.constructor===o1.constructor;//true 两种的构造器都是  function Object()

Number.constructor --> function Function()---(最顶级构造器)
Function.constructor --> function Function()
var a=1;
a.constructor --> function Number()
构造器：
Function-->Function -->  Object  Number  Array
      Object -->   {}  new Object()
      Number -->  var a=1;  new Number(1);
      Array
      
 var  o={};  
 o  instanceof Object;//true
  o  instanceof o.constructor;//ture

      
